# 团队记账和管理工具项目代码

Benork/               # 项目根目录
├── app.py                     # Flask 应用入口
├── config.py                  # 配置文件（如 SECRET_KEY、数据库URI）
├── models.py                  # 数据模型定义（User, Tag, Expense）
├── requirements.txt           # 项目依赖列表
├── auth/                      # 身份认证功能模块
│   ├── __init__.py            # 定义 auth Blueprint
│   └── routes.py              # 注册、登录、登出路由
├── main/                      # 普通用户功能模块
│   ├── __init__.py            # 定义 main Blueprint
│   └── routes.py              # 提交申请、查看自身申请路由
├── admin/                     # 管理员功能模块
│   ├── __init__.py            # 定义 admin Blueprint
│   └── routes.py              # 审核、分类管理、统计导出路由
├── tutoring/                     
│   ├── __init__.py            
│   └── routes.py
├── templates/                 # 前端模板
│   ├── base.html              # 基础页面框架模板
│   ├── auth/                  # auth 模块相关模板
│   │   ├── login.html         # 登录页面
│   │   └── register.html      # 注册页面
│   ├── main/                  # main 模块相关模板
│   │   ├── submit.html        # 提交报销申请页面
│   │   └── my_requests.html   # “我的申请”页面
│   └── admin/                 # admin 模块相关模板
│   │   ├── pending.html       # 待审核列表页面
│   │   ├── tags.html          # 分类及预算管理页面
│   │   └── stats.html         # 财务统计页面
│   └── tutoring/                 
│       ├── admin_pending.html       
│       ├── all_records.html          
│       ├── feedback.html
│       ├── my_records.html          
│       └── submit.html
└── static/                    # 静态文件目录（保存图表等）
    └── ...                    # 例如生成的统计图表 stats.png


# ✅ Flask 团队记账工具部署

## 📁 路径说明：

- 项目根目录：`/home/Benork`
- 虚拟环境目录：`/home/Benork/venv`
- 监听端口：`5002`

---

## 🧪 本地调试运行：

```bash
cd /home/Benork
python3 -m venv venv
source venv/bin/activate
pip install -r requirements.txt
python app.py
```

或绑定公网 IP：

```bash
export FLASK_ENV=development
export FLASK_APP=app.py
flask run --host=0.0.0.0 --port=5002
```

---

## 🚀 正式部署推荐：Gunicorn + systemd

### ✅ 启动 Gunicorn 后台服务：

```bash
cd /home/Benork
source venv/bin/activate
gunicorn -w 3 -b 0.0.0.0:5002 app:app --daemon
```

### 🛑 停止 gunicorn：

```bash
pkill gunicorn
```

---

## 🧰 添加 systemd 服务托管：

### 1. 创建服务文件

```bash
sudo nano /etc/systemd/system/benork.service
```

粘贴以下内容：

```ini
[Unit]
Description=Flask Team Accounting Tool (Benork)
After=network.target

[Service]
User=root
WorkingDirectory=/home/Benork
ExecStart=/home/Benork/venv/bin/gunicorn -w 3 -b 0.0.0.0:5002 app:app
Restart=always
Environment=FLASK_ENV=production
Environment=FLASK_APP=app.py

[Install]
WantedBy=multi-user.target
```

### 2. 启动并设置开机自启：

```bash
sudo systemctl daemon-reexec
sudo systemctl daemon-reload
sudo systemctl start benork.service
sudo systemctl enable benork.service
```

---

## 🧾 查看运行情况和日志：

```bash
sudo systemctl status benork.service
journalctl -u benork.service -n 50 --no-pager
journalctl -u benork.service -f  # 实时日志
```

---

## 🌐 外部访问测试：

假设服务器公网 IP 为 `1.2.3.4`，可在浏览器中访问：

```
http://1.2.3.4:5002
```

确保防火墙允许端口开放：

```bash
sudo ufw allow 5002/tcp
```

---

如果你还有其他模块（如 Neibr、Gallery）也用 systemd 管理，推荐统一命名规范，如：

```
neibr.service
gallery.service
benork.service
```

可批量查看状态：

```bash
systemctl list-units --type=service | grep .service
```


未来为了保证代码的结构性和可拓展性，我将取消admin，将这部分代码融合至现在的main，然后将融合后的模块改名为money，未来如果有新的表单，则在现在money和tutoring的基础上再添加新的模块。